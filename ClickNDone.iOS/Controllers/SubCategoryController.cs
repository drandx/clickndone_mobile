// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Drawing;
using ClickNDone.Core;
using MonoTouch.ObjCRuntime;

namespace ClickNDone.iOS
{
	public partial class SubCategoryController : UIViewController
	{

		private float scrollBtnCursor = 0f;

		public SubCategoryController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			for(int i=0; i<=30; i++)
			{
				UIButton btn = this.CreateButton (i,"Click Me "+i);
				this.ScrollerButtons.Add (btn);
			}
		}

		void handler (Object sender, EventArgs args)
		{
			UIButton test = (UIButton)sender;
			Console.WriteLine ("There You Go: "+test.Tag);
		}

		private UIButton CreateButton(int catId,string title)
		{
			var x = UIScreen.MainScreen.Bounds.Width;
			UIButton button = UIButton.FromType(UIButtonType.RoundedRect);

			RectangleF rect = new RectangleF(x*0.2f, this.scrollBtnCursor, x*0.6f, 40f);
			button.Frame = rect;
			button.SetTitle(title, UIControlState.Normal);
			button.Tag = catId;
			UIColor borderColor = UIColor.FromRGB (0,167,229);
			UIColor ButtonBackgroundColor = UIColor.White;

			this.scrollBtnCursor = rect.Location.Y + 45f;

			try
			{
				var path = UIBezierPath.FromRect(rect);
				ButtonBackgroundColor.SetFill();
				path.Fill();

				button.CurrentTitleColor.SetStroke();
				path.Stroke();

				button.Layer.BorderColor = borderColor.CGColor;
				button.Layer.BorderWidth = 2f;

				button.TouchDown += handler;

				return button;
			}
			catch (Exception ex)
			{
				Console.WriteLine("Error in SevenButton > Draw : {0}\n",ex.Message);
			}

			return null;

		}

	}
}
