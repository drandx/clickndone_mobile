// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using ClickNDone.Core;

namespace ClickNDone.iOS
{
	public partial class ConfirmedServiceController : UIViewController
	{
		readonly OrdersModel ordersModel = (OrdersModel)DependencyInjectionWrapper.Instance.ServiceContainer ().GetService (typeof(OrdersModel));
		readonly UserModel userModel = (UserModel)DependencyInjectionWrapper.Instance.ServiceContainer ().GetService (typeof(UserModel));

		public ConfirmedServiceController (IntPtr handle) : base (handle)
		{
		}

		public override async void ViewDidAppear(bool animated)
		{
			base.ViewDidAppear (animated);
			try 
			{
				ordersModel.RequestedOrder.Supplier = await userModel.GetUser(ordersModel.RequestedOrder.SupplierId, UserType.SUPPLIER);
				this.lblRanking.Text = "SrvPendiente";
				this.txtSupplerName.Text = ordersModel.RequestedOrder.Supplier.names;
				this.txtSurNames.Text = ordersModel.RequestedOrder.Supplier.surnames;
				this.txtUpplierPhone.Text = ordersModel.RequestedOrder.Supplier.mobile;
				this.txtClickCode.Text = ordersModel.RequestedOrder.ClickCode;
				this.txtState.Text = ordersModel.RequestedOrder.Status + "";
				this.txtPrice.Text = "QuienloPone?";
				this.txtServiceDate.Text = ordersModel.RequestedOrder.ReservationDate.ToString();
				this.txtServiceTime.Text = ordersModel.RequestedOrder.ReservationTime.ToString();

			}
			catch (Exception exc)
			{
				new UIAlertView("Oops!", exc.Message, null, "Ok").Show();
			}

		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			this.NavigationItem.SetHidesBackButton (true, false);

		}

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(false);
			userModel.IsBusyChanged += OnIsBusyChanged;
		}

		public override void ViewWillDisappear(bool animated)
		{
			base.ViewWillDisappear(false);
			userModel.IsBusyChanged -= OnIsBusyChanged;
		}

		void OnIsBusyChanged(object sender, EventArgs e)
		{
			/*txtEmail.Enabled = 
				txtPassword.Enabled =
					btnLogIn.Enabled = */
			indicator.Hidden = !userModel.IsBusy;
		}

	}
}
