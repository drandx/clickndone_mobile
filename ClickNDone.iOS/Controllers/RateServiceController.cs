// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using ClickNDone.Core;

namespace ClickNDone.iOS
{
	public partial class RateServiceController : MyViewController
	{
		readonly OrdersModel ordersModel = (OrdersModel)DependencyInjectionWrapper.Instance.ServiceContainer ().GetService (typeof(OrdersModel));


		public RateServiceController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			this.AddKeyboarListeners ();
			this.txtClickCode.Text = ordersModel.RequestedOrder.ClickCode;
			this.txtStatus.Text = ordersModel.RequestedOrder.Status.ToString ();
			this.txtName.Text = ordersModel.RequestedOrder.Supplier.names;
			this.txtLastName.Text = ordersModel.RequestedOrder.Supplier.surnames;

			btnSubmit.TouchUpInside += async (sender, e) => 
			{
				try
				{
					await ordersModel.ChangeOrderState(ServiceState.FINALIZADO,txtComments.Text, txtRanking.Text);
					new UIAlertView("Felicitaciones", "El servicio ha sido calificado con exito ", null, "Ok").Show();

				}
				catch(Exception exc)
				{
					new UIAlertView("Oops!", exc.Message, null, "Ok").Show();
				}
			};

		}

		public override void ViewWillAppear(bool animated)
		{
			base.ViewWillAppear(false);
			ordersModel.IsBusyChanged += OnIsBusyChanged;
		}

		public override void ViewWillDisappear(bool animated)
		{
			base.ViewWillDisappear(false);
			ordersModel.IsBusyChanged -= OnIsBusyChanged;
		}

		void OnIsBusyChanged(object sender, EventArgs e)
		{
			btnNoSubmit.Enabled = 
				btnSubmit.Enabled =
					indicator.Hidden = !ordersModel.IsBusy;
		}

	}
}
